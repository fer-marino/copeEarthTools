buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springBootVersion = '2.0.4.RELEASE'
        netcdfJavaVersion = '4.6.10'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/milestone" }
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url 'https://jitpack.io' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath 'io.spring.gradle:propdeps-plugin:0.0.9.RELEASE'
        classpath 'org.hidetake:gradle-ssh-plugin:2.9.0'
        classpath 'com.github.menny:GradleVersion:0.0.4'
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: "application"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.hidetake.ssh'
apply plugin: 'net.evendanan.versiongenerator'

group = 'org.earthstartsbeating'
sourceCompatibility = 1.8
mainClassName = 'org.esb.tools.EsbToolsKt'

def generators = [
        new net.evendanan.versiongenerator.generators.GitBuildVersionGenerator(0, 0),
]

def versionData = versionGenerator.generateVersion(1, 0, 0, generators)

remotes {
    esb {
        host = '51.38.225.223'
        port = 8080
        user = 'centos'
        identity = file("${System.properties['user.home']}/.ssh/serco-esb_rsa")
    }
}

task('showPlatformVersion') {
    doLast {
        println ssh.version
        ssh.run {
            session(remotes.esb) {
                execute 'uname -a'
                execute 'cat /etc/*-release', ignoreError: true
            }
        }
    }
}

task('deploy', dependsOn: bootJar) {
    doLast {
        ssh.run {
            session(remotes.esb) {
                put from: bootJar.archivePath.path, into: '/home/centos/fernando'
                execute 'sudo chmod +x /home/centos/fernando/*.jar'
            }
        }
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/libs-milestone' }
    maven { url "https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/" }
}


dependencies {
    // spring
    compile "org.springframework:spring-web"
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    compile 'org.springframework.shell:spring-shell-starter:2.0.0.RELEASE'
    runtime 'org.springframework.boot:spring-boot-devtools'

    kapt "org.springframework.boot:spring-boot-configuration-processor"
//    optional "org.springframework.boot:spring-boot-configuration-processor"

    // kotlin
    compile "com.fasterxml.jackson.module:jackson-module-kotlin"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

    // GEO
    compile 'com.esri.geometry:esri-geometry-api:2.0.0'
    compile "edu.ucar:cdm:${netcdfJavaVersion}"
    compile 'org.gdal:gdal:2.3.0'

    // utils
    compile 'commons-io:commons-io:2.6'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

    // test
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'io.projectreactor:reactor-test'
}


bootJar {
    launchScript {
        properties 'inlinedConfScript': 'esb.sh'
    }

    println "Building Copernicus ESB Tools ${versionData.versionName} (or ${project.version}), code ${versionData.versionCode}."

    finalizedBy deploy
}



springBoot {
    buildInfo ()
}


